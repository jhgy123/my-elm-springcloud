####bootstrap(.yml/.properties)可以理解成系统级别的一些参数配置，这些参数一般是不会变动的，优先加载此配置
# nacos配置
server:
  port: 14000

spring:
#  main:
#    web-application-type: reactive
  application:
    name: gateway-server
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848 #Nacos服务注册中心地址
      config:
        server-addr: localhost:8848 #Nacos作为配置中心地址
        file-extension: yaml #指定yaml格式的配置
        namespace: elmserver-springcloud
        group: user_group
    sentinel:
      transport:
        dashboard: localhost:8080 #配置Sentinel dashboard地址
        port: 8719
#    sentinel:
#      transport:
#        dashboard: localhost:8080 #配置Sentinel dashboard地址
#        port: 8719
    #      scg:
#        fallback:
#          mode: response
#            ## 响应的状态
#          response-status: 403
#            ## 响应体
#          response-body: '{"code": 403,"message": "请求失败，稍后重试！"data":}'
#      enabled: true

    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:  #路由配置
        - id: user_server_route                #路由的ID，没有固定规则但要求唯一，建议配合服务名
          uri: lb://user-server                #匹配后提供服务的路由地址
          predicates:
            - Path=/userconfig/*/**,/user/*/**,/user     #configAPI路径,微服务具体功能路径
        - id: orders_server_route              #路由的ID，没有固定规则但要求唯一，建议配合服务名
          uri: lb://orders-server              #匹配后提供服务的路由地址
          predicates:
            - Path=/ordersconfig/*/**,/orders/*/**,/orderdetailet/*/**,/orders,/orderdetailet     #configAPI路径,微服务具体功能路径
        - id: food_server_route                #路由的ID，没有固定规则但要求唯一，建议配合服务名
          uri: lb://food-server                #匹配后提供服务的路由地址
          predicates:
            - Path=/foodconfig/*/**,/food/*/**,/food     #configAPI路径,微服务具体功能路径
        - id: deliveryaddress_server_route     #路由的ID，没有固定规则但要求唯一，建议配合服务名
          uri: lb://deliveryaddress-server     #匹配后提供服务的路由地址
          predicates:
            - Path=/deliveryaddressconfig/*/**,/deliveryaddress/*/**,/deliveryaddress       #configAPI路径,微服务具体功能路径
        - id: cart_server_route                 #路由的ID，没有固定规则但要求唯一，建议配合服务名
          uri: lb://cart-server                 #匹配后提供服务的路由地址
          predicates:
            - Path=/cartconfig/*/**,/cart/*/**,/cart      #configAPI路径,微服务具体功能路径
        - id: business_server_route             #路由的ID，没有固定规则但要求唯一，建议配合服务名
          uri: lb://business-server             #匹配后提供服务的路由地址
          predicates:
            - Path=/businessconfig/*/**,/business/*/**,/business       #configAPI路径,微服务具体功能路径
      # 跨域配置
      globalcors:
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题
        cors-configurations:
          '[/**]': # 匹配所有请求
            allowedHeaders: "*"  # 跨域处理 允许所有的请求头
            allowedOrigins: "*"  # 跨域处理 允许所有的域
            allowedMethods:      # 支持的方法
              - GET
              - POST
              - PUT
              - DELETE

#      default-filters:
#        - name: Hystrix
#          args:
#            name: fallbackcmd
#            fallbackUri: forward:/fallback
#      default-filters:
#        fallback:


#      default-filters:
#        - name: Hystrix
#          args:
#            name: fallbackcmd
#            fallbackUri: forward:/fallback


